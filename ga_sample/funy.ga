		org		0x100

_start
		mov		ax,0xb800
		mov		ds,ax
_begin
		mov		bx,0x0000
		mov		cx,0x0018
		mov		di,0x0000
_move1
		push 	bx
		push 	cx
		mov		cx,0x0050
_move2
		mov		dx,word [bx]
		cmp		dl,0x20
		je		short &next1
		mov		di,dx
_move3
		mov		dx,word [bx+0x00a0]
		cmp		dl,0x20
		jne		short &next1
		push 	cx
		push 	dx
		mov		ah,0x2c
		int		0x21
		mov		al,dl
_time
		int		0x21
		cmp		al,dl
		je		short &time
		pop		dx
		pop		cx
		mov		word [bx+0x00a0],di
		mov		word [bx],0x0720
_next1
		add		bx,0x0002
		loop 	short &move2
		pop		cx
		pop		bx
		add		bx,0x00a0
		loop 	short &move1


		mov		bx,0x0000
		mov		cx,0x0018
		mov		di,0x0000
_move1_1
		push 	bx
		push 	cx
		mov		cx,0x0050
_move2_1
		mov		dx,word [bx]
		cmp		dl,0x20
		je		short &next1_1
		mov		dx,word [bx+0x00a0]
		cmp		dl,0x20
		je		short &begin
_next1_1
		add		bx,0x0002
		loop 	short &move2_1
		pop		cx
		pop		bx
		add		bx,0x00a0
		loop 	short &move1_1

		mov		ah,0x2
		mov		dh,0xff
		mov		dl,0xff
		mov		bh,0x0
		int		0x10

		mov		ah,0x4c
		int		0x21
