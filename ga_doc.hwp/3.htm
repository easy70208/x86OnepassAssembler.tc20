<HTML>
<HEAD>
<META NAME="GENERATOR" CONTENT="HTML document by Hwpw 96">
<TITLE>제3장 어셈블의사문자</TITLE>
</HEAD>

<A NAME="[문서의 처음]">

<P><FONT SIZE=5> 제 3 장 어셈블러 의사 문자(Assembler pseudo character)</FONT>
<BR>
<P><FONT SIZE=3>  GA에서는 의사 문자라 부르는 1바이트 혹은 2바이트 문자가 있는데, 레이블 선언 문자, 상수     선언 문자, 리스트 제어 문자, 주석 선언 문자, 2진수 선언 문자 16진수 선언 문자 그리고 편    집 문자 정의 등이 있다..</FONT>
<BR>
<P><FONT SIZE=3>  +-- 참고 ------------------------------------------------------------------------------+</FONT>
<P><FONT SIZE=3>  |의사 문자란?                                                                          |</FONT>
<P><FONT SIZE=3>  |                                                                                      |</FONT>
<P><FONT SIZE=3>  |표준 어셈블러에서는 기계어 코드에는 영향을 미치지 안고 어셈블러에게 지시를 하는 명령  |</FONT>
<P><FONT SIZE=3>  |어를 '의사어'라고 한다.                                                               |</FONT>
<P><FONT SIZE=3>  |                                                                                      |</FONT>
<P><FONT SIZE=3>  |(예) 번지 산출 의사어 'offset'                                                        |</FONT>
<P><FONT SIZE=3>  |                                                                                      |</FONT>
<P><FONT SIZE=3>  |     mov ax,offset data                                                               |</FONT>
<P><FONT SIZE=3>  |                                                                                      |</FONT>
<P><FONT SIZE=3>  |GA에서의 '의사 문자'는 '의사어'에 대응된다.  여기서 '문자'라는 의미는 위의 예처럼 'of |</FONT>
<P><FONT SIZE=3>  |fset'이라는 문자열이 아니고 단일 문자이기 때문이다.                                   |</FONT>
<P><FONT SIZE=3>  |                                                                                      |</FONT>
<P><FONT SIZE=3>  |(예) 'offset'과 대응되는 의사 문자 '&amp;'                                                |</FONT>
<P><FONT SIZE=3>  |                                                                                      |</FONT>
<P><FONT SIZE=3>  |     mov ax,&amp;data                                                                     |</FONT>
<P><FONT SIZE=3>  +--------------------------------------------------------------------------------------+</FONT>
<BR>
<P><FONT SIZE=3><B>  3.1 레이블 선언 의사 문자 </B></FONT>
<BR>
<P><FONT SIZE=3>  레이블 선언 의사 문자는 '_'(언더바)이다.  언더바로 정의된 이름은 레이블로 간주된다.  레    이블 선언 문자 뒤에 오는 문자의 길이가 20바이트를 넘으면 20바이트까지 인식되고 레이블      선언이 중복되어서는 안되며 레이블이름은 어느 문자나 상관없다.  GA에서는 레이블, 데이터     레이블, 프로시져의 개념은 없고 모두 하나의 레이블로 간주된다.</FONT>
<BR>
<P><FONT SIZE=3>  (예) _label1 : 레이블 'label1'을 선언</FONT>
<P><FONT SIZE=3>       _12345  : 레이블 '12345'를 선언(숫자도 상관없다.)</FONT>
<P><FONT SIZE=3>       _레이블 : 레이블 '레이블'을 선언(한글 레이블도 가능)</FONT>
<P><FONT SIZE=3>       _123456789012345678901 : 20바이트를 넘어 '12345678901234567890' 까지 인식</FONT>
<BR>
<P><FONT SIZE=3><B>  3.2 상수 선언 의사 문자</B></FONT>
<P><FONT SIZE=3>   </FONT>
<P><FONT SIZE=3>  상수 선언 의사 문자는 '!'(느낌표)이다.  느낌표가 정의된 이름은 상수로 간주된다.  상수 선    언 의사 문자 뒤에 오는 문자의 길이가 20바이트를 넘으면 20바이트까지 인식되고 상수 선언도    중복되어서는 안되며 상수 이름은 어느 문자나 문제없다.  GA에서의 상수 선언은 숫자만 허용    된다.</FONT>
<BR>
<P><FONT SIZE=3>  (예) !NULL</FONT>	<FONT SIZE=3>0 : 상수 'NULL'에 0을 선언</FONT>
<P><FONT SIZE=3>       !ENTER   0x0d : 상수 'ENTER'에 16진수 'd'를 선언</FONT>
<P><FONT SIZE=3>       !상수    0b11110000 : 상수 '상수'에 상수 0b11110000을 선언</FONT>
<P><FONT SIZE=3>       !123456789012345678901 -1 : 20바이트를 넘어 '12345678901234567890'에 -1을 선언</FONT>
<BR>
<P><FONT SIZE=3>  +-- 참고 ---------------------------------------------------------------------------+ </FONT>
<P><FONT SIZE=3>  |상수 선언 '(예)'에서 두 번째 줄에 0x0d는 16진수를 선언하는 것으로 3.6에서 설명된다.|</FONT>
<P><FONT SIZE=3>  +-----------------------------------------------------------------------------------+ </FONT>
<BR>
<P><FONT SIZE=3><B>  3.3 번지 산출 의사 문자</B></FONT>
<BR>
<P><FONT SIZE=3>  번지 산출 의사 문자는 '&amp;'(엠퍼샌드)이다.  정의된 레이블의 번지를 얻을 때 사용한다.  이것    은 표준 어셈블러의 'offset'수식어와 같은 기능을 한다.</FONT>
<BR>
<P><FONT SIZE=3>  (예) _abc mov ax,&amp;abc : 레이블 'abc'의 번지를 ax레지스터에 전송</FONT>
<P><FONT SIZE=3>       _msg dw &amp;abc : 레이블 'abc'의 번지를 값으로 함</FONT>
<BR>
<P><FONT SIZE=3> <B> 3.4 리스트 제어 의사 문자</B></FONT>
<BR>
<P><FONT SIZE=3>  리스트 제어 의사 문자는 '.'(마침표)이다. 의사 문자 뒤에 오는 리스트 제어 문은 모두 5가지    가 있다.</FONT>
<BR>
<P><FONT SIZE=3>  <B>3.4.1 liston/listoff(List On/Off)</B></FONT>
<BR>
<P><FONT SIZE=3>  리스트 제어 문의 가장 절대적인 것으로 모든 리스트 정보 출력을 허가 또는 금지한다.  초기    치는 liston으로 모든 리스트 정보를 표시한다.</FONT>
<BR>
<P><FONT SIZE=3><B>  3.4.2 linenumberon/linenumberoff(Line Number On/Off)</B></FONT>
<BR>
<P><FONT SIZE=3>  소스 행의 줄 번호 정보를 제어한다.  초기 치는 linenumberon으로 줄 번호를 표시한다.</FONT>
<BR>
<P><FONT SIZE=3><B>  3.4.3 offsetdisplayon/offsetdisplayoff(Offset Display On/Off)</B></FONT>
<BR>
<P><FONT SIZE=3>  각 명령어가 시작되는 번지의 표시를 제어한다.  초기 치는 offsetdisplayon으로 번지를 표시    한다.</FONT>
<BR>
<P><FONT SIZE=3><B>  3.4.4 binarycodedisplayon/binarycodedisplayoff(Binary Code Display On/Off)</B></FONT>
<BR>
<P><FONT SIZE=3>  어셈블되어진 기계어명령어의 표시를 제어한다.  초기치는 binarycodedisplayon으로 어셈된기    계 어를 표시한다.</FONT>
<BR>
<P><FONT SIZE=3><B>  3.4.5 commenton/commentoff(Comment On/Off)</B></FONT>
<BR>
<P><FONT SIZE=3>  소스화일에서 주석 문의 표시를 제어한다.  초기치는 commenton으로 주석이 있는 줄을 표시한    다. </FONT>
<BR>
<P><FONT SIZE=3>  +-- 참고 -----------------------------------------------------------------------------+</FONT>
<P><FONT SIZE=3>  |리스트 제어 문을 사용하면 리스트화일에 필요한 정보만을 표시할 수 있고 어셈블시간을 줄|</FONT>
<P><FONT SIZE=3>  |일수 있다.                                                                           |</FONT>
<P><FONT SIZE=3>  +-------------------------------------------------------------------------------------+</FONT>
<BR>
<P><FONT SIZE=3><B>  3.5 주석 선언 문자</B></FONT>
<BR>
<P><FONT SIZE=3>  주석 선언 문자는 ';'(세미콜론)이다.  세미콜론 뒤로 쓰이는 어떤 한 문자열도 어셈블러에      해 무시된다.</FONT>
<BR>
<P><FONT SIZE=3><B>  3.6 16진수 선언 문자</B></FONT>
<BR>
<P><FONT SIZE=3><B>  </B>16진수 선언 문자는 '0x'이다.  16진수 선언 문자 뒤에 오는 것은 16진수로 인식되며 처음 '0    '을 제외한 문자가 4개를 넘으면 안된다.  선언 문자는 소문자 대문자를 구별하지 안다.</FONT>
<BR>
<P><FONT SIZE=3>  (예) 0x10 : 16진수 '10'을 선언</FONT>
<P><FONT SIZE=3>       0xff : 16진수 'ff'를 선언</FONT>
<P><FONT SIZE=3>       0xabcd : 16진수 'abcd'를 선언</FONT>
<P><FONT SIZE=3>       0xffff : 16진수 'ffff'를 선언</FONT>
<P><FONT SIZE=3>       0x0ffff : 16진수 'ffff'를 선언</FONT>
<P><FONT SIZE=3><B>       </B>0xfffff : 2바이트를 초과</FONT>
<P><FONT SIZE=3>  </FONT>
<P><FONT SIZE=3><B>  3.7 10진수 선언</B></FONT>
<BR>
<P><FONT SIZE=3><B>  </B>10진수는 숫자를 그대로 사용하면 되면 마이너스 붙이면 음수로 인식된다.</FONT>
<BR>
<P><FONT SIZE=3><B>  3.8 2진수 선언 문자</B></FONT>
<BR>
<P><FONT SIZE=3><B>  </B>2진수 선언 문자는 '0b'이다.  2진수 선언 문자 뒤에 오는 것은 2진수로 인식되며 처음 '0 '을    제외한 문자가 16개를 넘으면 안된다.</FONT>
<BR>
<P><FONT SIZE=3>  (예) 0b1111 : 이진수 '1111'을 선언</FONT>
<P><FONT SIZE=3>       0b11110000 : 이진수 '11110000'을 선언</FONT>
<P><FONT SIZE=3>       0b1111000011110000 : 이진수 '1111000011110000'을 선언</FONT>
<P><FONT SIZE=3>       0b00001111000011110000 : 이진수 '1111000011110000'을 선언</FONT>
<P><FONT SIZE=3>       0b10000111100001111 : 2바이트를 초과</FONT>
<BR>
<P><FONT SIZE=3>  <B>3.9 편집 문자 정의</B></FONT>
<BR>
<P><FONT SIZE=3><B>  </B>편집 문자란 'C language'에서 제공하는 '\n','\r' 등을 의미한다.  GA에서는 표준 'C'와 같은    기능을 제공하며 1바이트로 간주된다.</FONT>
<BR>
<P><FONT SIZE=3>  </FONT>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=588 HEIGHT=43>
<TD VALIGN=MIDDLE WIDTH=7%>
<P><FONT SIZE=3>'\\'</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P><FONT SIZE=3>'\'자신</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=7%>
<P><FONT SIZE=3>'\0'</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P><FONT SIZE=3>NULL</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=7%>
<P><FONT SIZE=3>'\a'</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P><FONT SIZE=3>0x07</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=7%>
<P><FONT SIZE=3>'\b'</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P><FONT SIZE=3>0x08</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=7%>
<P><FONT SIZE=3>'\n'</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P><FONT SIZE=3>0x0a</FONT></TD>
<TR>
<TD VALIGN=MIDDLE WIDTH=7%>
<P><FONT SIZE=3>'\r'</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P><FONT SIZE=3>0x0d </FONT></TD>
<TD VALIGN=MIDDLE WIDTH=7%>
<P><FONT SIZE=3>'\t'</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P><FONT SIZE=3>0x09</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=7%>
<P><FONT SIZE=3>'"'</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P><FONT SIZE=3>0x22</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=7%>
<P><FONT SIZE=3>'''</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P><FONT SIZE=3>0x27</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<BR></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</TABLE>
<BR>
<P><FONT SIZE=3><B>  </B>(예) mov ah,'\r' : ah 레지스터에 0x0d를 전송</FONT>
<P><FONT SIZE=3>       ds  "GoldFish Assembler version 1.1\r\n" : 스트링끝에서 0x0d,0x0a로 변환된다.</FONT>
<BR>
<P><FONT SIZE=3>  +-- 참고 ---------------------------------------------------------------------+       </FONT>
<P><FONT SIZE=3>  |위의 (예)에 두 번째 줄에 'ds'명령어는 스트링 선언 명령어로 ??장에서 설명된다.| </FONT>
<P><FONT SIZE=3>  +-----------------------------------------------------------------------------+ </FONT>
<BR>
</HTML>
